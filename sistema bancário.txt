# Sistema Bancário com Tkinter
import tkinter as tk
from tkinter import messagebox, simpledialog

class ContaBancaria:
    def __init__(self, titular, saldo=0):
        self.titular = titular
        self.saldo = saldo

    def depositar(self, valor):
        if valor > 0:
            self.saldo += valor
            return True
        return False

    def sacar(self, valor):
        if 0 < valor <= self.saldo:
            self.saldo -= valor
            return True
        return False

    def transferir(self, valor, conta_destino):
        if 0 < valor <= self.saldo:
            self.saldo -= valor
            conta_destino.saldo += valor
            return True
        return False

class SistemaBancarioGUI:
    def __init__(self, master):
        self.master = master
        self.master.title("Sistema Bancário")
        self.contas = {}

        # Widgets
        self.label = tk.Label(master, text="Bem-vindo ao Sistema Bancário")
        self.label.pack()

        self.botao_criar = tk.Button(master, text="Criar Conta", command=self.criar_conta)
        self.botao_criar.pack(fill='x')

        self.botao_depositar = tk.Button(master, text="Depositar", command=self.depositar)
        self.botao_depositar.pack(fill='x')

        self.botao_sacar = tk.Button(master, text="Sacar", command=self.sacar)
        self.botao_sacar.pack(fill='x')

        self.botao_transferir = tk.Button(master, text="Transferir", command=self.transferir)
        self.botao_transferir.pack(fill='x')

        self.botao_saldo = tk.Button(master, text="Verificar Saldo", command=self.ver_saldo)
        self.botao_saldo.pack(fill='x')

    def criar_conta(self):
        nome = simpledialog.askstring("Criar Conta", "Nome do titular:")
        if nome:
            if nome in self.contas:
                messagebox.showwarning("Erro", "Conta já existe.")
            else:
                self.contas[nome] = ContaBancaria(nome)
                messagebox.showinfo("Sucesso", f"Conta criada para {nome}!")

    def buscar_conta(self, nome):
        return self.contas.get(nome)

    def depositar(self):
        nome = simpledialog.askstring("Depositar", "Nome do titular:")
        conta = self.buscar_conta(nome)
        if conta:
            try:
                valor = float(simpledialog.askstring("Depositar", "Valor a depositar:"))
                if conta.depositar(valor):
                    messagebox.showinfo("Sucesso", f"Depósito de R${valor:.2f} realizado!")
                else:
                    messagebox.showerror("Erro", "Valor inválido.")
            except:
                messagebox.showerror("Erro", "Entrada inválida.")
        else:
            messagebox.showerror("Erro", "Conta não encontrada.")

    def sacar(self):
        nome = simpledialog.askstring("Sacar", "Nome do titular:")
        conta = self.buscar_conta(nome)
        if conta:
            try:
                valor = float(simpledialog.askstring("Sacar", "Valor a sacar:"))
                if conta.sacar(valor):
                    messagebox.showinfo("Sucesso", f"Saque de R${valor:.2f} realizado!")
                else:
                    messagebox.showerror("Erro", "Saldo insuficiente ou valor inválido.")
            except:
                messagebox.showerror("Erro", "Entrada inválida.")
        else:
            messagebox.showerror("Erro", "Conta não encontrada.")

    def transferir(self):
        origem = simpledialog.askstring("Transferir", "Nome do titular (origem):")
        conta_origem = self.buscar_conta(origem)
        if conta_origem:
            destino = simpledialog.askstring("Transferir", "Nome do titular (destino):")
            conta_destino = self.buscar_conta(destino)
            if conta_destino:
                try:
                    valor = float(simpledialog.askstring("Transferir", "Valor a transferir:"))
                    if conta_origem.transferir(valor, conta_destino):
                        messagebox.showinfo("Sucesso", f"Transferência de R${valor:.2f} realizada!")
                    else:
                        messagebox.showerror("Erro", "Saldo insuficiente ou valor inválido.")
                except:
                    messagebox.showerror("Erro", "Entrada inválida.")
            else:
                messagebox.showerror("Erro", "Conta de destino não encontrada.")
        else:
            messagebox.showerror("Erro", "Conta de origem não encontrada.")

    def ver_saldo(self):
        nome = simpledialog.askstring("Ver Saldo", "Nome do titular:")
        conta = self.buscar_conta(nome)
        if conta:
            messagebox.showinfo("Saldo", f"Saldo atual de {nome}: R${conta.saldo:.2f}")
        else:
            messagebox.showerror("Erro", "Conta não encontrada.")

if __name__ == "__main__":
    root = tk.Tk()
    app = SistemaBancarioGUI(root)
    root.mainloop()
